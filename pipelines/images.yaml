trigger:
- master

jobs:
- job: Linux
  displayName: 'Build linux images'
  pool:
    vmImage: 'ubuntu-latest'
  workspace:
    clean: all
  variables:
    workingDirectory: '$(Build.SourcesDirectory)/linux/'
  steps:
  - script: |
      cd $(workingDirectory)
      chmod 777 *.sh
      ./build.sh
    displayName: 'Build images'
    workingDirectory: $(workingDirectory)

  - task: Docker@2
    displayName: 'Docker Login'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    inputs:
      containerRegistry: 'czon Docker Hub'
      command: 'login'
      addPipelineData: false

  - script: |
      cd $(workingDirectory)
      ./push.sh
    displayName: 'Push images'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    workingDirectory: $(workingDirectory)

- job: Windows
  displayName: 'Build windows images'
  pool:
    vmImage: 'windows-latest'
  workspace:
    clean: all
  variables:
    workingDirectory: '$(Build.SourcesDirectory)/windows/'
  steps:
  - script: .\build.ps1
    displayName: 'Build images'
    workingDirectory: $(workingDirectory)

  - task: Docker@2
    displayName: 'Docker Login'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    inputs:
      containerRegistry: 'czon Docker Hub'
      command: 'login'
      addPipelineData: false

  - script: .\push.sh
    displayName: 'Push images'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    workingDirectory: $(workingDirectory)

- job: Manifest
  displayName: 'Build Multi-Platform manifest'
  dependsOn:
  - Linux
  - Windows
  pool:
    vmImage: 'ubuntu-latest'
  workspace:
    clean: all
  variables:
    workingDirectory: '$(Build.SourcesDirectory)/xplat/'
  steps:
  - script: |
      cd $(workingDirectory)
      chmod 777 *.sh
      ./build.sh
    displayName: 'Build images'
    workingDirectory: $(workingDirectory)

  - task: Docker@2
    displayName: 'Docker Login'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    inputs:
      containerRegistry: 'czon Docker Hub'
      command: 'login'
      addPipelineData: false

  - script: |
      cd $(workingDirectory)
      ./push.sh
    displayName: 'Push images'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    workingDirectory: $(workingDirectory)
